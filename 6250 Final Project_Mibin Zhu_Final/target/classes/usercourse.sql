DROP TABLE IF EXISTS users;
CREATE TABLE users 
(
       USERNAME VARCHAR(50) NOT NULL PRIMARY KEY
     , PASSWORD VARCHAR(50) NOT NULL
     , ENABLED BOOLEAN NOT NULL
   	 , FIRST_NAME VARCHAR(60)
     , LAST_NAME VARCHAR(40)
     , BIRTH_DATE VARCHAR(40)
     , EMAIL VARCHAR(40)
     , ADDRESS VARCHAR(100)
     , PHONE VARCHAR(50)
     , UNIQUE UQ_USER_1 (FIRST_NAME, LAST_NAME)
);

DROP TABLE IF EXISTS AUTHORITIES;
CREATE TABLE AUTHORITIES 
(
    USERNAME VARCHAR(50) NOT NULL,
    AUTHORITY VARCHAR(50) NOT NULL,
    FOREIGN KEY(USERNAME) REFERENCES users(USERNAME)
);
CREATE UNIQUE INDEX IX_AUTH_USERNAME ON AUTHORITIES (USERNAME,AUTHORITY);

DROP TABLE IF EXISTS userinfo;
DROP TABLE IF EXISTS game;
DROP TABLE IF EXISTS user_course_detail;

CREATE TABLE userinfo
(
       ID INT NOT NULL AUTO_INCREMENT
	   , USERNAME VARCHAR(50) NOT NULL
     , FIRST_NAME VARCHAR(60)
     , LAST_NAME VARCHAR(40)
     , BIRTH_DATE VARCHAR(40)
     , EMAIL VARCHAR(40)
     , ADDRESS VARCHAR(100)
     , PHONE VARCHAR(50)
     , UNIQUE UQ_USERINFO_1 (FIRST_NAME, LAST_NAME)
     , PRIMARY KEY (ID)
);

CREATE TABLE game
(
       ID INT NOT NULL AUTO_INCREMENT
     , GAMENAME VARCHAR(20) NOT NULL
     , PRICE VARCHAR(20) NOT NULL
     , ISSUER VARCHAR(50) NOT NULL
     , ISSUEDATE VARCHAR(50) NOT NULL
     , TYPE VARCHAR(50) NOT NULL
     , DESCRIPTION VARCHAR(255) NOT NULL
     , PRIMARY KEY (ID)
);

CREATE TABLE user_game_detail
(
       USER_ID INT NOT NULL
     , GAME_ID INT NOT NULL
     , PRIMARY KEY (USER_ID, GAME_ID)
     , CONSTRAINT FK_USER_GAME_DETAIL_1 FOREIGN KEY (USER_ID)
                  REFERENCES userinfo (ID) ON DELETE CASCADE
     , CONSTRAINT FK_USER_GAME_DETAIL_2 FOREIGN KEY (GAME_ID)
                  REFERENCES game (ID)
);

CREATE TABLE wish
(
  ID INT NOT NULL AUTO_INCREMENT
  , WISHNAME VARCHAR(20) NOT NULL
  , WISHTYPE VARCHAR(50) NOT NULL
  , WISHDESCRIPTION VARCHAR(255) NOT NULL
  , PRIMARY KEY (ID)
);

CREATE TABLE user_wish_detail
(
  USER_ID INT NOT NULL
  , WISH_ID INT NOT NULL
  , PRIMARY KEY (USER_ID, WISH_ID)
  , CONSTRAINT FK_USER_WISH_DETAIL_1 FOREIGN KEY (USER_ID)
  REFERENCES userinfo (ID) ON DELETE CASCADE
  , CONSTRAINT FK_USER_WISH_DETAIL_2 FOREIGN KEY (WISH_ID)
  REFERENCES wish (ID)
);